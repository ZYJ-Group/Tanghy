import ee
import geemap
import os
import datetime

# Initialize Earth Engine
ee.Initialize()

# Define the region of interest (ROI) using coordinates
roi = ee.Geometry.Rectangle([122.368421, 31.227125, 122.468421, 31.327125])

# Define the date range
start_date = '2022-01-01'
end_date = '2022-03-11'

# Load the Sentinel-1 GRD image collection and filter it
collection = (ee.ImageCollection('COPERNICUS/S1_GRD')
              .filterBounds(roi)
              .filterDate(ee.Date(start_date), ee.Date(end_date)))

# Create an interactive map
Map = geemap.Map()

# Center the map on the ROI
Map.centerObject(roi, 10)

# Function to calculate and set VV-VH ratio
def setRatio(image):
    vv = image.select('VV')
    vh = image.select('VH')
    ratio = vv.divide(vh).rename('VV_VH_Ratio')
    return image.addBands(ratio)

# Map the setRatio function over the collection
collection_with_ratio = collection.map(setRatio)

# Define export parameters
export_folder = 'D:\Graduate_first\GEE_download'

# Export each image in the collection
image_list = collection_with_ratio.toList(collection_with_ratio.size())
for i in range(image_list.size().getInfo()):
    image = ee.Image(image_list.get(i))
    date = ee.Date(image.get('system:time_start'))
    export_name = date.format('YYYY_MM_dd_HH_mm_ss').getInfo()
    
    # Define the export path
    export_path = os.path.join(export_folder, f'{export_name}.tif')
    
    # Export the image
    task = ee.batch.Export.image.toDrive(image=image,
                                         description=export_name,
                                         folder=export_folder,
                                         fileNamePrefix=export_name,
                                         region=roi,
                                         scale=10,  # Adjust the scale as needed
                                         fileFormat='GeoTIFF',
                                         crs='EPSG:4326',  # Adjust the CRS as needed
                                         maxPixels=1e13)
    task.start()
    
    # Print export information
    print(f'Exporting image {i + 1} to {export_path}')

# Display the map in the notebook
Map
